{"version":3,"sources":["App.js","index.js"],"names":["App","firstRender","useRef","useState","inputValue","setInputValue","todos","setTodos","useEffect","current","localStorage","setItem","JSON","stringify","newTodos","getItem","parse","className","onSubmit","e","preventDefault","text","id","uuidv4","autoFocus","type","placeholder","value","onChange","target","map","todo","key","onClick","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAgEeA,MA5Df,WACE,IAAMC,EAAcC,kBAAO,GADd,EAGuBC,mBAAS,IAHhC,mBAGNC,EAHM,KAGMC,EAHN,OAIaF,mBAAS,IAJtB,mBAING,EAJM,KAICC,EAJD,KAoCb,OAfAC,qBAAU,WACLP,EAAYQ,QACbR,EAAYQ,SAAU,EAEtBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAL,YAAmBP,OAEjD,CAACA,IAEJE,qBAAU,WACR,IAAMM,EAAWJ,aAAaK,QAAQ,QACnCD,GACDP,EAASK,KAAKI,MAAL,sBAAeV,GAAf,CAAsBQ,QAEhC,IAGD,yBAAKG,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMC,SAjCI,SAACC,GACfA,EAAEC,iBAEFb,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAClBe,KAAMjB,EACNkB,GAAIC,kBAGNlB,EAAc,MA0BR,2BACEmB,WAAS,EACTC,KAAK,OACLC,YAAY,gBACZC,MAAOvB,EACPwB,SAAU,SAAAT,GAAC,OAAId,EAAcc,EAAEU,OAAOF,UAExC,4BAAQF,KAAK,UAAb,QAEDnB,EAAMwB,KAAI,SAACC,GAAD,OACT,yBAAKC,IAAKD,EAAKT,GAAIL,UAAU,QAC3B,2BAAIc,EAAKV,MACT,uBAAGY,QAAS,kBAnCFX,EAmCmBS,EAAKT,QAlC1Cf,EAASD,EAAM4B,QAAO,SAACH,GAAD,OAAUA,EAAKT,KAAOA,MAD3B,IAACA,GAmC6BL,UAAU,4BCnD7DkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.266a636e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const firstRender = useRef(true);\n\n  const [inputValue, setInputValue] = useState('');\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (e) => {\n    e.preventDefault();\n    \n    setTodos([...todos, {\n      text: inputValue,\n      id: uuidv4()\n    }]);\n\n    setInputValue('');\n  }\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  useEffect(() => {\n    if(firstRender.current) {\n      firstRender.current = false;\n    } else {\n      localStorage.setItem(\"Todo\", JSON.stringify([...todos]));\n    }\n  }, [todos])\n\n  useEffect(() => {\n    const newTodos = localStorage.getItem(\"Todo\");\n    if(newTodos) {\n      setTodos(JSON.parse([...todos, newTodos]));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <form onSubmit={addTodo}>\n          <input \n            autoFocus\n            type=\"text\" \n            placeholder=\"Add a task...\"\n            value={inputValue}\n            onChange={e => setInputValue(e.target.value)}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n        {todos.map((todo) => (\n          <div key={todo.id} className=\"todo\">\n            <p>{todo.text}</p>\n            <i onClick={() => removeTodo(todo.id)} className=\"far fa-trash-alt\"></i>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}